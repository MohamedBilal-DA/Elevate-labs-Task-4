--1.Query for selecting column from database

SELECT PRODCT, NO_OF_ITEMS_SOLD
FROM B_SALES
FETCH FIRST 50 ROWS ONLY;


--2.Query by using WHERE clause


SELECT *
FROM B_SALES
WHERE MONTH IN 'July'
FETCH FIRST 50 ROWS ONLY;


--3.Query using ORDER BY clause


SELECT *
FROM B_PRICE
ORDER BY PRICE DESC;


--4.Query using GROUP BY clause


SELECT COUNT(*),DAY_NAME
FROM B_SALES
GROUP BY DAY_NAME;


--5.Query using INNER JOIN


SELECT S.PRODCT,P.PRICE
FROM B_SALES S INNER JOIN B_PRICE P
ON S.PRODCT=P.PRODUCT
FETCH FIRST 100 ROWS ONLY;


--6.Query using LEFT JOIN

SELECT S.PRODCT,P.PRICE
FROM B_SALES S LEFT JOIN B_PRICE P
ON S.PRODCT=P.PRODUCT
FETCH FIRST 100 ROWS ONLY;


--6.Query using RIGHT JOIN


SELECT S.PRODCT,P.PRICE
FROM B_SALES S RIGHT JOIN B_PRICE P
ON S.PRODCT=P.PRODUCT
FETCH FIRST 100 ROWS ONLY;


--7.Query using SUBQUERY

SELECT PRODCT
FROM B_SALES
WHERE PRICE IN(SELECT PRICE
FROM B_PRICE
WHERE PRODUCT IN'Cacao Deep');


--8.Query using SUM function


 SELECT S.PRODCT,SUM(P.PRICE)
 FROM B_SALES S INNER JOIN B_PRICE P
 ON S.PRODCT=P.PRODUCT
 GROUP BY  S.PRODCT;


--9.Query using AVG fuction


SELECT S.PRODCT,AVG(P.PRICE)
FROM B_SALES S INNER JOIN B_PRICE P
ON S.PRODCT=P.PRODUCT
GROUP BY  S.PRODCT;


--10.Query for creating a VIEW


CREATE OR REPLACE VIEW Sales_Price_View AS
SELECT *
FROM (
    SELECT S.PRODCT, P.PRICE
    FROM B_SALES S
    INNER JOIN B_PRICE P
        ON S.PRODCT = P.PRODUCT
)
WHERE ROWNUM <= 100;


--11.Query for creating INDEX

CREATE INDEX idx_sales_product ON B_SALES(PRODCT);


CREATE INDEX idx_price_product ON B_PRICE(PRODUCT);

